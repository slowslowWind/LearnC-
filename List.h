/* -- List.h -------------------------------------------------------------------

    定义用于处理列表的List数据类型
    基本操作包括：
        构造函数
        +empty：检查列表是否为空
        +insert：插入一项
        +erase：删除一项
        +display：打印输出列表
        +<<:输出操作符
------------------------------------------------------------------------------*/

#include <iostream>

#ifndef LIST
#define LIST

const int CAPACITY = 1024;
typedef int ElementType;

class List
{
    public:
    /* 函数成员 */
        /* 类构造函数 */
        List();
        /* ---------------------------------------------------------------------

        创建一个List对象

        前置条件：无
        后置条件：创造一个空的List对象；    mySize为0
        ----------------------------------------------------------------------*/

        /* empty操作 */
        bool empty() const;
        /* -------------------------------------------------------------------
        
        检查列表是否为空

        前置条件：无
        后置条件：如果列表为空，返回true，否则返回false
        ----------------------------------------------------------------------*/

        /* 插入操作 */
        void insert(ElementType item, int pos);
        /* --------------------------------------------------------------------

        在列表中给定位置插入一个值

        前置条件：item是将被插入的值；数组中有足够空间（mySize < CAPACITY）；并且插入位置满足0 <= pos <= mySize
        后置条件：item被插入到列表中由pos限定的位置
        --------------------------------------------------------------------- */

        /* 删除操作 */
        void erase(int pos);
        /* -------------------------------------------------------------------
        
        删除列表给定位置的值

        前置条件：列表非空并且给定位置满足0 < pos < mySize
        后置条件：由pos限定的位置处的元素被删除
        --------------------------------------------------------------------- */

        /* 输出操作 */
        void display(ostream & out) const;
        /* -------------------------------------------------------------------

        显示一个列表

        前置调价：ostream out已经被打开
        后置条件：这个List对象所表示的列表被插入到out中
        --------------------------------------------------------------------- */

    private:
    /* 数据成员 */
        int mySize;                         //当前存储在myArray中的列表的大小
        ElementType myArray[CAPACITY];      //存储列表元素的数组
};  // --- List类声明结束

// ------ 输出操作符的原型
ostream & operator<< (ostream & out, const List & aList);

#endif